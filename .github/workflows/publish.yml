name: "Publish Extension"
on:
  workflow_dispatch:
    inputs:
      NEW_CUSTOM_VERSION:
        description: '(OPTIONAL) >>> LEAVE EMPTY BY DEFAULT <<< it will increment xx automatically. For Major/Minor/Custom version number (yy.mm.xx) (no leading zeros) like 1.1.1.'
        required: false

jobs:
  CD:
    runs-on: ubuntu-latest
    steps:
      - name: Authorized by
        run: echo "${{ github.event.sender.login }}"

      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Pull in latest Tsitus tools
        # TODO: Make this runnable via `npm run update-tsitu-tools` by writing a utility script
        # (It can then also be leveraged by `npm run build` for assembling the complete extension)
        env:
          tsitu_cdn: https://cdn.jsdelivr.net/gh/tsitu/MH-Tools@master/src/bookmarklet
          curl_opts: -sSf -O -J
        run: |
          mkdir -p ${{ github.workspace }}/src/third_party/tsitu
          cd ${{ github.workspace }}/src/third_party/tsitu
          curl ${{ env.curl_opts }} ${{ env.tsitu_cdn }}/bm-analyzer.min.js
          curl ${{ env.curl_opts }} ${{ env.tsitu_cdn }}/bm-crafting.min.js
          curl ${{ env.curl_opts }} ${{ env.tsitu_cdn }}/bm-cre.min.js
          curl ${{ env.curl_opts }} ${{ env.tsitu_cdn }}/bm-crown.min.js
          curl ${{ env.curl_opts }} ${{ env.tsitu_cdn }}/bm-map.min.js
          curl ${{ env.curl_opts }} ${{ env.tsitu_cdn }}/bm-menu.min.js
          curl ${{ env.curl_opts }} ${{ env.tsitu_cdn }}/bm-powers.min.js
          curl ${{ env.curl_opts }} ${{ env.tsitu_cdn }}/bm-setup-fields.min.js
          curl ${{ env.curl_opts }} ${{ env.tsitu_cdn }}/bm-setup-items.min.js

      - name: Auto-versioning
        if: ${{ github.event.inputs.NEW_CUSTOM_VERSION == '' }}
        run: |
          echo "NEW_CREATED_VERSION=$(git describe --tags `git rev-list --tags --max-count=1` | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g' | sed 's/v//')" >> $GITHUB_ENV

      - name: Use custom version
        if: ${{ github.event.inputs.NEW_CUSTOM_VERSION != '' }}
        run: |
          echo "NEW_CREATED_VERSION=${{ github.event.inputs.NEW_CUSTOM_VERSION }}" >> $GITHUB_ENV

      - name: Tag with new version
        id: create-tag
        run: |
          git tag ${{ env.NEW_CREATED_VERSION }}
          git push --tags
          echo "::set-output name=version-tag::${{ env.NEW_CREATED_VERSION }}"

      - name: Update manifest
        run: |
          echo "New Version: ${{ steps.create-tag.outputs.version-tag }}"
          sed -i'' -e 's|"version":.*|"version": "${{ steps.create-tag.outputs.version-tag }}",|' src/manifest.json
          cat src/manifest.json

      - name: Zip it! zip it good!
        id: create-zip
        run: |
          mkdir build
          zip -r ./build/release-${{ steps.create-tag.outputs.version-tag }}.zip ./src
          echo "::set-output name=artifact-name::release-${{ steps.create-tag.outputs.version-tag }}.zip"
          echo "::set-output name=artifact-path::build/release-${{ steps.create-tag.outputs.version-tag }}.zip"

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.create-zip.outputs.artifact-name }}
          path: ${{ steps.create-zip.outputs.artifact-path }}

      - name: Create release notes
        id: create_release_notes
        uses: mikepenz/release-changelog-builder-action@v1
        with:
          commitMode: true
          failOnError: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: ncipollo/release-action@v1
        with:
          name: ${{ steps.create-tag.outputs.version-tag }}
          tag: ${{ steps.create-tag.outputs.version-tag }}
          artifacts: ${{ steps.create-zip.outputs.artifact-path }}
          body: ${{ steps.create_release_notes.outputs.changelog }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload new release zip to Chrome Webstore
        uses: Klemensas/chrome-extension-upload-action@1df3cdf4047a4789bc61a64a125994d8caf23572
        with:
          refresh-token: ${{ secrets.CHROME_WEBSTORE_REFRESH_TOKEN }}
          client-id: ${{ secrets.CHROME_WEBSTORE_CLIENT_ID }}
          client-secret: ${{ secrets.CHROME_WEBSTORE_CLIENT_SECRET }}
          file-name: ${{ steps.create-zip.outputs.artifact-path }}
          app-id: 'ghfmjkamilolkalibpmokjigalmncfek'
          publish: true

      - name: Rename zip to xpi
        run: |
          mv ${{ steps.create-zip.outputs.artifact-path }} build/release.xpi
          echo "::set-output name=artifact-path-xpi::build/release-${{ steps.create-tag.outputs.version-tag }}.xpi"

      - name: Upload new release xpi to Firefox Webstore
        uses: trmcnvn/firefox-addon@b2d90798a21626e1f4f25ffa279ba2e7199bb4cc
        with:
          uuid: '{801e5516-3311-4ee7-8185-7da12ffab807}'
          xpi: ${{ steps.create-zip.outputs.artifact-path-xpi }}
          manifest: ./src/manifest.json
          api-key: ${{ secrets.FIREFOX_WEBSTORE_API_KEY }}
          api-secret: ${{ secrets.FIREFOX_WEBSTORE_API_SECRET }}
        env:
          VERSION: ${{ steps.create-tag.outputs.version-tag }}
